searchState.loadedDescShard("libobs", 2, "Used to directly render a non-async source without any …\nHelper function to draw sprites for a source (synchronous …\nHelper function to set the color matrix information when …\nEnumerates active child sources used by this source\nEnumerates the entire active child source tree used by …\nEnumerates filters assigned to the source\n@}\nAdds a filter to the source (which is used whenever the …\nGets the number of filters the source has.\nGets filter index\nRemoves a filter from the source\nSets filter index\nModifies the order of a specific filter\nSource asynchronous video output structure.  Used with …\nGets audio mixer flags\nGets the balance value for a stereo audio source\nGets the base height for a source (not taking in to …\nGets the base width for a source (not taking in to account …\nGets the color space of a source (if it has video)\nReturns the translated display name of a source\nGets a filter of a source by its display name.\nGets source flags.\nGets the current async video frame\nGets the height of a source (if it has video)\nGets the source identifier\nGets the name of a source\nReturns capability flags of a source\nGets private front-end settings data.  This data is …\nReturns the procedure handler for a source\nGets the settings string for a source\nReturns the signal handler for a source\nGets the audio sync offset (in nanoseconds) for a source\nHints whether or not the source will blend texels\nGets the source type\nGets the UUID of a source\nGets the user volume for a source that has audio output\nGets the width of a source (if it has video)\nIncrements the ‘active’ reference counter to indicate …\nIncrements the ‘showing’ reference counter to indicate …\nSource definition structure\nReturns the current ‘hidden’ state on the source\nSend a load signal to sources (soft deprecated; does not …\nSend a load signal to sources\nMedia controls\nOutputs audio data (always asynchronous)\nOutputs asynchronous video data.  Set to NULL to …\nPreloads asynchronous video data to allow instantaneous …\nDefault RGB filter handler for generic effect filters.  …\nDraws the filter.\nDraws the filter with a specific technique.\nReturns the properties list for a specific existing …\nAdds/releases a reference to a source.  When the last …\nReleases the current async video frame\nNotifies all references that the source should be released\nRemoves an active child source.  Must be called by parent …\nReturns true if the source should be released\nSend a save signal to sources\nSends a got-focus or lost-focus event to a source\nSends a key up/down event to a source\nSends a mouse down/up event to a source\nSends a mouse move event to a source.\nSends a mouse wheel event to a source\nUsed to decouple audio from video so that audio doesn’t …\nSets audio mixer flags.  These flags are used to specify …\nSets the balance value for a stereo audio source\nSets the default source flags.\nSets source flags.  Note that these are different from the …\nThe ‘hidden’ flag is not the same as a sceneitem’s …\nSets the name of a source\nSets the audio sync offset (in nanoseconds) for a source\nSets current async video frame immediately\nSets the user volume for a source that has audio output\nShows any preloaded video data\nReturns true if currently displayed somewhere (active or …\nSkips the filter if the filter is invalid and cannot be …\nUpdates settings for this source\nSignal an update to any currently used properties via ‘…\nRenders a video source.\nInitializes OBS\nEnables fixed transitions (videos or specific types of …\nDirectly renders its sub-source instead of to texture.  …\nReturns true if video is active, false otherwise\nCreates a video encoder context\nVideo initialization structure\nAdds a view to the main render loop, with current …\nAdds a view to the main render loop, with custom video …\nCreates a view context.\nDestroys this view context\nEnumerate the video info of all mixes using the specified …\nGets the source currently in use for this view context\nGets the video settings currently in use for this view …\nRemoves a view from the main render loop\nRenders the sources of this view context\nSets the source to be used for this view context.\n@brief Attach the volume meter to a source @param volmeter …\n@brief Create a volume meter @param type the mapping type …\n@brief Destroy a volume meter @param volmeter pointer to …\n@brief Detach the volume meter from the currently attached …\n@brief Get the number of channels which are configured for …\n@brief Set the peak meter type for the volume meter @param …\nSource output flags\n&lt; Output format\n&lt; Output height\n&lt; Output width\nPacket priority\nCalls a function in a procedure handler.  Returns false if …\n&lt; Presentation timestamp\nPresentation timestamp\n&lt; YUV range (if YUV)\nCalled when saving a source.  This is a separate function …\n&lt; How to scale if scaling\nCalled when the source is visible\n&lt; Packet size\nThe speaker layout describes where the speakers are …\n&lt; Channels: FL, FR, LFE\n&lt; Channels: FL, FR, FC, RC\n&lt; Channels: FL, FR, FC, LFE, RC\n&lt; Channels: FL, FR, FC, LFE, RL, RR\n&lt; Channels: FL, FR, FC, LFE, RL, RR, SL, SR\n&lt; Channels: MONO\n&lt; Channels: FL, FR\n&lt; Unknown setting, fallback is stereo.\nTextures, length determined by format\n&lt; Timebase denominator\n&lt; Timebase numerator\nAudio track index (used with outputs)\nType of source.\n&lt; Encoder type\nSpecifies the encoder type (video or audio)\nPrivate data associated with this entry\nUpdates the settings for this source\nUpdates the settings for this encoder (usually used for …\nGet color space\nCalled when rendering the source with the graphics …\nCalled each video frame with the time elapsed")